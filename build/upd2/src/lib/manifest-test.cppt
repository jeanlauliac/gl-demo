#include "manifest.h"
#include "string_char_reader.h"

using namespace upd;

typedef json::lexer<string_char_reader> string_lexer;

@case "parses empty manifest" {
  string_char_reader reader("{}");
  string_lexer lx(reader);
  auto result = manifest::parse(lx);
  manifest::manifest expected;
  @expect(result == expected);
}

@case "parses complex manifest" {
  string_char_reader reader(R"JSON({
    "source_patterns": [
      "(src/lib/**/*).cppt",
      "(src/main).cpp"
    ],
    "rules": [
      {
        "command_line_ix": 0,
        "output": "dist/($1).o"
      }
    ]
  }
)JSON");
  string_lexer lx(reader);
  auto result = manifest::parse(lx);
  manifest::manifest expected = {
    .source_patterns = {
      path_glob::parse("(src/lib/**/*).cppt"),
      path_glob::parse("(src/main).cpp"),
    },
    .rules = {
      {
        .command_line_ix = 0,
        .output = substitution::parse("dist/($1).o")
      },
    },
  };
  @expect(result == expected);
}
